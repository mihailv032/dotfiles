#!/usr/bin/env bash
##113 main part
# Generates a banner image for the given Steam appid with the given dimensions

# .tiff format was chosen since it appears to be the most performant format
# for ImageMagick to work with when generating the banner image
EXT=tiff
CACHE_DIR=/tmp/rofi-game-launcher
TITLE=$CACHE_DIR/title.png
STEAM_DIR=~/.local/share/Steam
mkdir -p $CACHE_DIR

usage() {
    echo "Usage: $0 -a <APPID> -w <WIDTH> -h <HEIGHT> -b [<BLEND WIDTH>] [-f]"
    echo "  -b: Specify the width in pixels of the section on the edges used to extend the image. Default: 200"
    echo "  -f: Force generation of the banner image even if it exists in the cache"
    exit
}

rasiFile() {
cat <<EOF
@import "../launcher"

icon-banner {
    filename:                       "$1";
    expand:                         false;
}
window {
    // This height should match the height used in scripts/game-splash-menu.sh
    height:                         370;
	padding: 0;
}

mainbox {
    children:                       [icon-banner, icon-title, horizontal-box];
    orientation:                    vertical;
}



// Vertical padding of the banner image needs to be (height - width)/2
// There is no way (currently?) to use variables so if the height is changed,
// it must be updated here as well
@media (min-width: 1920) {
    icon-banner {
        size:                       1920;
        padding:                    calc( (370 - 1920)/2 ) 0px;

    }
}

@media (min-width: 2560) {
    icon-banner {
        size:                       2560;
        padding:                    calc( (370 - 2560)/2 ) 0px;
    }
}

@media (min-width: 3440) {
    icon-banner {
        size:                       3440;
        padding:                    calc( ( 380 - 3440)/2 ) 0px;
    }
}

@media (min-width: 3840) {
    icon-banner {
        size:                       3840;
        padding:                    calc( (380 - 3840)/2 ) 0px;
    }
}

icon-title {
    expand:                         false;
    // This image is also generated by scripts/update-banner.sh
    filename:                       "$2";
    padding:                        -120px 0px 0px 60%;
    size:                           600;
}

horizontal-box {
    children:                       [dummy, vertical-box, dummy];
    expand:                         false;
    orientation:                    horizontal;
    padding:                        0px 50% 0px 0px;
}

vertical-box {
    children:                       [message, listview, textbox-width];
    expand:                         false;
    orientation:                    vertical;
    background-color:               rgba(0, 0, 0, 0.5);
}

// Dummy textbox used to control the width of listview
textbox-width {
    expand:                         false;
    width:                          300px;
}

listview {
    layout:                         vertical;
    padding:                        20px 0px;
	border: 						0px;
}

element {
    children:                       [element-text];
    padding:                        8px;
    margin:                         12px 60px;
    orientation:                    horizontal;
    background-color:               rgba(0, 0, 0, 0.5);
    border-radius:                  16px;
}

element selected {
    background-color:               @primary;
    border-radius:                  16px;
}

element-text {
    horizontal-align:               0.5;
}

element-text selected {
    horizontal-align:               0.5;
    color:                          @background;
}

#element.selected.normal {
	background-color: #C00DD5;
}
EOF
}

update-banner() {
    local OPTIND=1
    local appid width height force
    local blend=200

    while getopts 'a:w:h:b:f' arg
    do
        case ${arg} in
            a) appid=${OPTARG};;
            w) width=${OPTARG};;
            h) height=${OPTARG};;
            b) blend=${OPTARG};;
            f) force=1;;
            *) usage;;
        esac
    done

    [ -z $appid ] && usage
    [ -z $width ] && usage
    [ -z $height ] && usage

    local src=$STEAM_DIR/appcache/librarycache/${appid}_library_hero.jpg
    local title=$STEAM_DIR/appcache/librarycache/${appid}_logo.png
    local out=$CACHE_DIR/$appid/${width}x${height}.$EXT
	local rasi=~/.config/rofi/gameLaunch/iconBanner/
    mkdir -p $CACHE_DIR/$appid
    if [ ! -f $out ] || [ ! -z $force ]; then
        # Banner image is generated by taking the hero image used by Steam
        # (typically 1920x620) and stretching and blurring the horizontal
        # edges to reach the desired width. The variable blend determines the
        # how much of the edges are used in this operation.
        local gradient=$CACHE_DIR/gradient.tiff
        local left=$CACHE_DIR/left.tiff
        local right=$CACHE_DIR/right.tiff
        local center=$CACHE_DIR/center.tiff


        convert $src -resize ${width}x${height} $center

        # Generate gradient image used for blending the side extensions into
        # the center image and for fading the side images
        magick -size ${height}x${blend} gradient: -rotate 90 $gradient

        local center_width=$(identify -format "%W" $center)
        local side_width=$(( (width - center_width + 1)/2 + blend ))
        local side_blend=$(( side_width/2 ))

        # Generate left extension
        convert $center -crop ${blend}x${height}+0+0 \
            -resize ${side_width}x${height}\! -blur 0x12 \
            -gravity east \( $gradient -rotate 180 \) \
            -compose copyopacity -composite \
            -gravity west \( $gradient -resize ${side_blend}x${height}\! \) \
            -compose copyopacity -composite \
            $left

        # Generate right extension
        convert $center -gravity east -crop ${blend}x${height}+0+0 \
            -resize ${side_width}x${height}\! -blur 0x12 \
            -gravity west $gradient \
            -compose copyopacity -composite \
            -gravity east \( $gradient -rotate 180 -resize ${side_blend}x${height}\! \) \
            -compose copyopacity -composite \
            $right

        # Blend the banner together
        convert \
            \( $center -background none -gravity center -extent ${width}x${height} \) \
            \( $left   -background none -gravity west   -extent ${width}x${height} \) \
            -compose over -composite \
            \( $right  -background none -gravity east   -extent ${width}x${height} \) \
            -compose over -composite \
            $out
        fi
		rasiFile "$out" "$title" > "$rasi/$appid.rasi" 
}

update-banner $@
